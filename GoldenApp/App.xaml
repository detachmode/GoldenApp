<Application x:Class="GoldenApp.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:GoldenApp"
             StartupUri="MainWindow.xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
    <Application.Resources>
        <ResourceDictionary>

            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:GoldenApp.ViewModel" />

            <!-- Fill Brushes -->

            <SolidColorBrush x:Key="MenuForeground" Color="#F4F4F4" />

            <SolidColorBrush x:Key="NormalBrush" Color="#A8A8A8" />

            <SolidColorBrush x:Key="PressedBrush" Color="#1B1B1B" />

            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

            <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#151515" />

            <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#363636" />

            <!-- Border Brushes -->

            <SolidColorBrush x:Key="NormalBorderBrush" Color="Aquamarine" />

            <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="Aquamarine" />

            <SolidColorBrush x:Key="DefaultedBorderBrush" Color="Aquamarine" />

            <SolidColorBrush x:Key="PressedBorderBrush" Color="Aquamarine" />

            <SolidColorBrush x:Key="DisabledBorderBrush" Color="#232323" />

            <SolidColorBrush x:Key="SolidBorderBrush" Color="#2E2E2E" />

            <SolidColorBrush x:Key="LightBorderBrush" Color="#252525" />

            <!-- Miscellaneous Brushes -->
            <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

            <Style TargetType="{x:Type Window}">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#2d2d30" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#c7c7c7" />
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="UIBackground" Color="#2d2d30" />
            <SolidColorBrush x:Key="ContentBackground" Color="#252526" />
            <SolidColorBrush x:Key="BorderBrush" Color="#3f3f46" />
            <SolidColorBrush x:Key="BorderBrushMoreContrast" Color="#555555" />

            <Style TargetType="{x:Type local:MainWindow}" BasedOn="{StaticResource {x:Type Window}}" />


            <SolidColorBrush x:Key="LightColorBrush" Color="#414141" />


            <Style TargetType="{x:Type Menu}">
                <Setter Property="Background" Value="{StaticResource UIBackground}" />
            </Style>

            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Height" Value="1" />
                <Setter Property="Margin" Value="4,2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- TopLevelHeader -->
            <ControlTemplate
                x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                TargetType="{x:Type MenuItem}">
                <Grid>


                    <Popup
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        AllowsTransparency="True"
                        Canvas.ZIndex="10"
                        Focusable="False"
                        PopupAnimation="Fade">
                        <Border
                            Name="SubmenuBorder"
                            Canvas.ZIndex="10"
                            SnapsToDevicePixels="True"
                            Background="{StaticResource WindowBackgroundBrush}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1,1,1,1">
                            <ScrollViewer CanContentScroll="True"
                                          Canvas.ZIndex="10"

                                          Margin="0,2"
                                          VerticalScrollBarVisibility="Hidden">
                                <StackPanel
                                    IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>


                    <Grid
                        Canvas.ZIndex="100"
                        Margin="0,3,0,3">
                        <Border Name="Border"
                                Canvas.ZIndex="100">
                            <ContentPresenter
                                Margin="12,2,12,2"
                                Canvas.ZIndex="100"
                                VerticalAlignment="Bottom"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>


                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="Black" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- TopLevelItem -->

            <ControlTemplate
                x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                TargetType="{x:Type MenuItem}">

                <Grid Margin="6,8,6,8">
                    <Border Name="Border">
                        <ContentPresenter
                            Margin="6,3,6,3"
                            VerticalAlignment="Bottom"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                    </Border>
                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- SubmenuItem -->

            <ControlTemplate
                x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                TargetType="{x:Type MenuItem}">
                <Border Name="Border" Height="24" Margin="2,0">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" SharedSizeGroup="ItemName" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            Name="Icon"
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            ContentSource="Icon" />
                        <Border
                            Name="Check"
                            Width="13" Height="13"
                            Visibility="Collapsed"
                            VerticalAlignment="Center"
                            Margin="6,0,6,0"
                            Background="{StaticResource NormalBrush}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource NormalBorderBrush}">
                            <Path
                                Name="CheckMark"
                                Width="7" Height="7"
                                Visibility="Hidden"
                                SnapsToDevicePixels="False"
                                Stroke="{StaticResource GlyphBrush}"
                                StrokeThickness="2"
                                Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                        </Border>
                        <ContentPresenter
                            Name="HeaderHost"
                            Grid.Column="1"
                            Margin="12,0,0,0"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <TextBlock x:Name="InputGestureText"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Grid.Column="2"
                                   Text="{TemplateBinding InputGestureText}"
                                   Margin="26,0,0,0"
                                   DockPanel.Dock="Right" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsCheckable" Value="true">
                        <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource SelectedBackgroundBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- SubmenuHeader -->

            <ControlTemplate
                x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                TargetType="{x:Type MenuItem}">
                <Border Name="Border" Height="24" Margin="2,0">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" SharedSizeGroup="ItemName" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            Name="Icon"

                            Grid.Column="0"
                            VerticalAlignment="Center"
                            ContentSource="Icon" />
                        <ContentPresenter
                            Margin="12,0,0,0"
                            Name="HeaderHost"
                            VerticalAlignment="Center"
                            Grid.Column="1"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <TextBlock x:Name="InputGestureText"
                                   VerticalAlignment="Center"
                                   Grid.Column="2"
                                   Text="{TemplateBinding InputGestureText}"
                                   Margin="5,0,2,0"
                                   DockPanel.Dock="Right" />
                        <Path
                            Grid.Column="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 0 7 L 4 3.5 Z"
                            Fill="{StaticResource GlyphBrush}" />
                        <Popup
                            Name="Popup"
                            Placement="Right"
                            HorizontalOffset="-4"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Fade">
                            <Border
                                Name="SubmenuBorder"
                                SnapsToDevicePixels="True"

                                Background="{StaticResource WindowBackgroundBrush}"
                                BorderBrush="{StaticResource SolidBorderBrush}"
                                BorderThickness="1">
                                <ScrollViewer CanContentScroll="True"
                                              Margin="0,2"
                                              VerticalScrollBarVisibility="Hidden">
                                    <StackPanel
                                        IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource SelectedBackgroundBrush}" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True" />
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>


            <!-- MenuItem Style -->

            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Template"
                                Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Template"
                                Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template"
                                Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>